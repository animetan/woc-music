import discord
from discord.ext import commands

from utils import database
import random

from discord.utils import get
from random import random
from threading import local
import time

import random
import string
import requests
from colorama import Fore as c
from discord_components import DiscordComponents, Select, SelectOption, Button,ButtonStyle
from datetime import date, datetime, timedelta
import datetime
import sqlite3
import discord
from discord.ext import commands
from discord.utils import get
from discord.ext.commands import CommandNotFound
from discord import FFmpegPCMAudio
from discord import Status
from asyncio import sleep
import random
from discord import utils



import DateTime
import asyncio
from PIL import Image, ImageFont, ImageDraw
import io
import requests
import io
from discord.ext import commands,tasks
from PIL import Image, ImageDraw, ImageFont
from io import BytesIO
from dislash import SlashClient, ActionRow, Button
import ipc
import json
import requests
import timestamp
from discord.ext import commands
from discord_slash import SlashCommand, cog_ext, SlashContext
from discord_slash.utils.manage_commands import create_option, create_choice
import os
from discord.ext import commands
from dislash import InteractionClient, SelectMenu, SelectOption
from dislash import SlashClient, ActionRow, Button
import discord as ds
import json

class Shop(commands.Cog):

    def __init__(self, bot):
        self.bot = bot
        self.db = database.DataBase()
    @commands.has_permissions(administrator=True)
    @commands.command(
        name="–¥–æ–±–∞–≤–∏—Ç—å-—Ä–æ–ª—å",
        aliases=["add", "add-shop", "–¥–æ–±–∞–≤–∏—Ç—å"],
        brief="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ä–æ–ª—å –≤ –º–∞–≥–∞–∑–∏–Ω",
        usage="add <@role> <cost>"
    )
    async def add_role_to_shop(self, ctx, role: discord.Role, cost: int=0):
        if cost < 0:
            await ctx.send("–°—É–º–º–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ 0")
        else:
            await self.db.insert_new_role(role, cost)
            await ctx.message.add_reaction("üíñ")
            await ctx.message.delete()
    @commands.has_permissions(administrator=True)
    @commands.command(
        name="—É–¥–∞–ª–∏—Ç—å-—Ä–æ–ª—å",
        aliases=["remove", "rm-role", "remove-role", "—É–¥–∞–ª–∏—Ç—å"],
        brief="–£–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞",
        usage="remove <@role>"
    )
    async def remove_role(self, ctx, role: discord.Role):
        if ctx.guild.get_role(role.id) is None:
            await ctx.send("–†–æ–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            await self.db.delete_role_from_shop(role)
            await ctx.message.add_reaction("üíñ")
            await ctx.message.delete()


    @commands.command(
        name="–∫—É–ø–∏—Ç—å-—Ä–æ–ª—å",
        aliases=["buy", "buy-role", "–∫—É–ø–∏—Ç—å"],
        brief="–ö—É–ø–∏—Ç—å —Ä–æ–ª—å",
        usage="buy <@role>"
    )
    async def buy_role(self, ctx, role: discord.Role):
        if ctx.guild.get_role(role.id) is None:
            await ctx.send("–†–æ–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            await ctx.message.delete()
        elif role in ctx.author.roles:
            await ctx.send("–£ –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è —Ç–∞–∫–∞—è —Ä–æ–ª—å")
            await ctx.message.delete()
        else:
            role_data = await self.db.get_shop_data(role)
            balance = await self.db.get_data(ctx.author)

            if balance["balance"] < role_data["cost"]:
                await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")
                await ctx.message.delete()
            elif balance["balance"] <= 0:
                await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")
                await ctx.message.delete()
            else:
                await self.db.update_member("UPDATE users SET balance = balance - ? WHERE member_id = ? AND guild_id = ?", [role_data["cost"], ctx.author.id, ctx.guild.id])

                await ctx.author.add_roles(role)
                await ctx.message.add_reaction("üíñ")
                await ctx.message.delete()
    @commands.has_permissions(administrator=True)
    @commands.command(
        name="–º–∞–≥–∞–∑–∏–Ω-—Ä–æ–ª–µ–π",
        aliases=["shop", "roles-shop", "–º–∞–≥–∞–∑–∏–Ω"],
        brief="–ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π"
    )
    async def view_shop(self, ctx):
        color = random.randint(0, 0xffffff)
        embed = discord.Embed(title="„Ö§",description=f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", color=color)
        embed.add_field(name=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π", value=f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", inline=False)
        embed.set_thumbnail(url=ctx.author.avatar_url)


        data = await self.db.get_shop_data(ctx.guild.id, all_data=True)
        for row in data:
            if ctx.guild.get_role(row["role_id"]) is not None:
                embed.add_field(
                    name=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–°—Ç–æ–∏–º–æ—Å—Ç—å: {row['cost']}",
                    value=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–†–æ–ª—å: {ctx.guild.get_role(row['role_id']).mention}",
                    inline=False
                )
                embed.add_field(name="‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", value=f"„Ö§")


        await ctx.send(embed=embed)
        await ctx.message.delete()



    @commands.cooldown(1, 10800, commands.BucketType.user)
    @commands.command(name="–∫–∞–∑–∏–Ω–æ")
    async def casino(self, ctx, amount: int):
        emojis = [
            "üíé",
            "üçá",
            "üçí",
        ]
        emojis2 = [
            "üçí",
            "üçá",
            "üíé",
        ]
        emojis3 = [
            "üçá",
            "üíé",
            "üçí",
        ]
        emojis2 = random.choice(emojis)
        emojis33 = random.choice(emojis2)
        emojis44 = random.choice(emojis3)
        msg = await ctx.send(f"{emojis2} {emojis33} {emojis44}")
        await asyncio.sleep(0)
        emojis11 = random.choice(emojis)
        emojis12 = random.choice(emojis2)
        emojis13 = random.choice(emojis3)
        await ctx.send(f"{emojis11} {emojis12} {emojis13}")
        #–µ—Å–ª–∏ –≤—ã–ø–∞–¥–∞–µ—Ç 2 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —ç–º–æ–¥–∑–∏ –≤—ã–¥–∞–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏
        if emojis11 == emojis12 and emojis11 == emojis13:
            amount2 = random.randint(100, 300)
            await self.db.update_member("UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?", [amount2, ctx.author.id, ctx.guild.id])
            color = random.randint(0, 0xffffff)
            embed = discord.Embed(title="„Ö§",description=f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", color=color)
            embed.add_field(name=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–ö–∞–∑–∏–Ω–æ —Å {ctx.author}", value=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {amount}:coin:", inline=False)
            embed.add_field(name="‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", value=f"„Ö§")
            embed.set_thumbnail(url=ctx.author.avatar_url)
            await ctx.send(embed=embed)
        elif emojis11 == emojis12 or emojis11 == emojis13 or emojis12 == emojis13:
            amount3 = random.randint(400, 700)
            await self.db.update_member("UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?", [amount3, ctx.author.id, ctx.guild.id])
            color = random.randint(0, 0xffffff)
            embed = discord.Embed(title="„Ö§",description=f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", color=color)
            embed.add_field(name=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–ö–∞–∑–∏–Ω–æ —Å {ctx.author}", value=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {amount3}:coin:", inline=False)
            embed.add_field(name="‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", value=f"„Ö§")
            embed.set_thumbnail(url=ctx.author.avatar_url)
            await ctx.send(embed=embed)
        else:
            color = random.randint(0, 0xffffff)
            embed = discord.Embed(title="„Ö§",description=f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", color=color)
            embed.add_field(name=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–ö–∞–∑–∏–Ω–æ —Å {ctx.author}", value=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏:coin:", inline=False)
            embed.add_field(name="‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", value=f"„Ö§")
            embed.set_thumbnail(url=ctx.author.avatar_url)
            await ctx.send(embed=embed)
   

#–∫–æ–º–∞–Ω–¥–∞ —á—Ç–æ–±—ã –ø–æ–ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫ –¥–µ–Ω—å–≥–∏
    @commands.command(
        name="–ø–æ–ª–æ–∂–∏—Ç—å",
        aliases=["deposit", "–¥–µ–ø–æ–∑–∏—Ç", "–ø–æ–ª–æ–∂–∏—Ç—å-–¥–µ–Ω—å–≥–∏"],
        brief="–ü–æ–ª–æ–∂–∏—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –±–∞–Ω–∫",
        usage="–ø–æ–ª–æ–∂–∏—Ç—å <—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç—å>"
    )
    async def deposit(self, ctx, amount: int):
        bank = await self.db.get_data(ctx.author)
        if bank['balance'] < amount:
            color = random.randint(0, 0xffffff)
            embed = discord.Embed(title="„Ö§",description=f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", color=color)
            embed.add_field(name=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§{ctx.author}", value=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Ä—É–∫–∞—Ö", inline=False)
            embed.add_field(name="‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", value=f"„Ö§")
            embed.set_thumbnail(url=ctx.author.avatar_url)
            await ctx.send(embed=embed)
            await ctx.message.delete()
        else:
         await self.db.update_member("UPDATE users SET balance = balance - ? WHERE member_id = ? AND guild_id = ?", [amount, ctx.author.id, ctx.guild.id])
         await self.db.update_member("UPDATE users SET bank = bank + ? WHERE member_id = ? AND guild_id = ?", [amount, ctx.author.id, ctx.guild.id])
         color = random.randint(0, 0xffffff)
         embed = discord.Embed(title="„Ö§",description=f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", color=color)
         embed.add_field(name=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–ë–∞–Ω–∫ {ctx.author}", value=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§ –í—ã –ø–æ–ª–æ–∂–∏–ª–∏: {amount}:coin:", inline=False)
         embed.add_field(name="‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", value=f"„Ö§")
         embed.set_thumbnail(url=ctx.author.avatar_url)
         await ctx.send(embed=embed)
         await ctx.message.delete()


    @commands.command(name = "–±–∞–Ω–∫")
    async def bank(self, ctx):
        bank = await self.db.get_data(ctx.author)
        color = random.randint(0, 0xffffff)
        embed = discord.Embed(title="„Ö§",description=f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", color=color)
        embed.add_field(name=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–ë–∞–Ω–∫ {ctx.author}", value=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§  –£ –≤–∞—Å –≤ –±–∞–Ω–∫–µ: {bank['bank']}:coin:", inline=False)
        embed.add_field(name="‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", value=f"„Ö§")
        embed.set_thumbnail(url=ctx.author.avatar_url)
        await ctx.send(embed=embed)
        await ctx.message.delete()



#–∫–æ–º–∞–Ω–¥—É –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã
    @commands.command(
        name="—Å–Ω—è—Ç—å",
        aliases=["withdraw", "–≤—ã–≤–µ—Å—Ç–∏", "—Å–Ω—è—Ç—å-–¥–µ–Ω—å–≥–∏"],
        brief="–°–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å –±–∞–Ω–∫–∞",
        usage="withdraw <amount>"
    )
    async def withdraw(self, ctx, amount: int):
        bank = await self.db.get_data(ctx.author)
        if bank['bank'] < amount:
            color = random.randint(0, 0xffffff)
            embed = discord.Embed(title="„Ö§",description=f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", color=color)
            embed.add_field(name=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§{ctx.author}", value=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Ä—É–∫–∞—Ö", inline=False)
            embed.add_field(name="‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", value=f"„Ö§")
            embed.set_thumbnail(url=ctx.author.avatar_url)
            await ctx.send(embed=embed)
            await ctx.message.delete()
        else:
            await self.db.update_member("UPDATE users SET bank = bank - ? WHERE member_id = ? AND guild_id = ?", [amount, ctx.author.id, ctx.guild.id])
            await self.db.update_member("UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?", [amount, ctx.author.id, ctx.guild.id])
            color = random.randint(0, 0xffffff)
            embed = discord.Embed(title="„Ö§",description=f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", color=color)
            embed.add_field(name=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–ë–∞–Ω–∫ {ctx.author}", value=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§ –í—ã —Å–Ω—è–ª–∏: {amount}:coin:", inline=False)
            embed.add_field(name="‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", value=f"„Ö§")
            embed.set_thumbnail(url=ctx.author.avatar_url)
            await ctx.send(embed=embed)
            await ctx.message.delete()



    
    @commands.command()
    async def rps(self, ctx, member: discord.Member=None, amount: int=None):
        if amount is None:
            await ctx.send("–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É")
        if member is None:
            member = ctx.author
        balance = await self.db.get_data(ctx.author)
        if balance['balance'] < amount:
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –≤ –±–∞–Ω–∫–µ")
            return
            #–ø—Ä–æ–≤–µ—Ä—è—Ç—å –¥–µ–Ω—å–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —É–ø–æ–º—è–Ω—É–ª–∏
        balance = await self.db.get_data(member)
        if balance['balance'] < amount:
            await ctx.send(f"–£ {member} –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.")
            return
        if member is None:
            member = ctx.author
        if member == ctx.author:
            await ctx.send("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å —Å —Å–æ–±–æ–π")
        else:
            #–∂–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            msg = await ctx.send(f"{member}, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ç—Ä–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞")
            #–∂–¥–∞—Ç—å –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                answer = await self.bot.wait_for('message', check=lambda m: m.author == ctx.author, timeout=30)
            except asyncio.TimeoutError:
                await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ")
                return
            #–ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if answer.content.lower() == "||–∫–∞–º–µ–Ω—å||":
                #–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤ test.json
                with open("test.json", "r") as f:
                    data = json.load(f)
                data[ctx.author.id] = "||–∫–∞–º–µ–Ω—å"
                with open("test.json", "w") as f:
                    json.dump(data, f)
            if answer.content.lower() == "||–±—É–º–∞–≥–∞||":
                #–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤ test.json
                with open("test.json", "r") as f:
                    data = json.load(f)
                data[ctx.author.id] = "–±—É–º–∞–≥–∞"
                with open("test.json", "w") as f:
                    json.dump(data, f)
            if answer.content.lower() == "||–Ω–æ–∂–Ω–∏—Ü—ã||":
                #–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤ test.json
                with open("test.json", "r") as f:
                    data = json.load(f)
                data[ctx.author.id] = "–Ω–æ–∂–Ω–∏—Ü—ã"
                with open("test.json", "w") as f:
                    json.dump(data, f)
                await ctx.send(f"{member}, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ç—Ä–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞")
                try:
                    answer = await self.bot.wait_for('message', check=lambda m: m.author == member, timeout=30)
                except asyncio.TimeoutError:
                    await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ")
                    return
                #–ø—Ä–æ–≤–µ—Ä—è—Ç—å —á—Ç–æ –æ—Ç–≤–µ—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Ç–æ—Ä–æ–≥–æ —É–ø–æ–º—è–Ω—É–ª–∏
                if answer.content.lower() == "–∫–∞–º–µ–Ω—å":
                    await answer.delete()
                    with open("test.json", "r") as f:
                        data = json.load(f)
                    data[member.id] = "–∫–∞–º–µ–Ω—å"
                    with open("test.json", "w") as f:
                        json.dump(data, f)
                    await ctx.send("–ù–∏—á—å—è")
                elif answer.content.lower() == "–Ω–æ–∂–Ω–∏—Ü—ã":
                    
                    await answer.delete()
                    with open("test.json", "r") as f:
                        data = json.load(f)
                    data[member.id] = "–Ω–æ–∂–Ω–∏—Ü—ã"
                    with open("test.json", "w") as f:
                        json.dump(data, f)
                    await ctx.send("–í—ã –ø–æ–±–µ–¥–∏–ª–∏")
                    await self.db.update_member("UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?", [amount, ctx.author.id, ctx.guild.id])
                elif answer.content.lower() == "–±—É–º–∞–≥–∞":
                   
                    await answer.delete()
                    with open("test.json", "r") as f:
                        data = json.load(f)
                    data[member.id] = "–±—É–º–∞–≥–∞"
                    with open("test.json", "w") as f:
                        json.dump(data, f)
                    await ctx.send(f"{member} –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏")

                    await self.db.update_member("UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?", [amount, member.id, ctx.guild.id])
                    await self.db.update_member("UPDATE users SET balance = balance - ? WHERE member_id = ? AND guild_id = ?", [amount, ctx.author.id, ctx.guild.id])


                else:
                    await ctx.send("–ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç")
                    await answer.delete()


    @commands.command(name="–∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å")
    async def random_earn_money(self, ctx):
        #—Ä–∞–Ω–¥–æ–º–Ω–æ –±—Ä–∞—Ç—å —Å–ª–æ–≤–∞ –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
        words = ["–∫—É—Ä—å–µ—Ä", "—à–∞—Ö—Ç—ë—Ä", "–≤—Ä–∞—á—å", "—Ç–∞–∫—Å–∏—Å—Ç"]
        amount = random.randint(0, 100)
        await self.db.update_member("UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?", [amount, ctx.author.id, ctx.guild.id])
        color = random.randint(0, 0xffffff)
        embed = discord.Embed(title="„Ö§",description=f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", color=color)
        embed.add_field(name=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–ë–∞–ª–∞–Ω—Å {ctx.author}", value=f"„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§„Ö§–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {amount} –Ω–∞ —Ä–∞–±–æ—Ç–µ {random.choice(words)}:coin:", inline=False)
        embed.add_field(name="‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", value=f"„Ö§")
        embed.set_thumbnail(url=ctx.author.avatar_url)
        await ctx.send(embed=embed)
        await ctx.message.delete()




def setup(bot):
    bot.add_cog(Shop(bot))
